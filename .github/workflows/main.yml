name: Foodgram main workflow

on: [push]

jobs:
  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v4
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v4
          with:
            context: ./backend/
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram-project-react/infra
            sudo docker compose pull
            sudo docker compose down
            sudo docker compose up -d
            sudo docker compose exec backend python manage.py migrate
            sudo docker compose exec backend python manage.py collectstatic
            sudo docker compose exec backend cp -r /app/collected_static/. /app/static/static/
            sudo docker system prune -af

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Деплой успешно выполнен! Пуш сделал ${{ github.actor }} с пометкой ${{ github.event.commits[0].message }}.
